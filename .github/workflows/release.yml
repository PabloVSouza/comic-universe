name: Build/release Electron app

on:
  push:
    branches:
      - dev/v2.0.0-ci-fixes
  # Temporarily disabled for testing
  # push:
  #   tags:
  #     - v*.*.*
jobs:
  prepare-stable:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.stable-version.outputs.stable-version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Get current version
        id: current-version
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "current-version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          echo "Current version: $CURRENT_VERSION"

      - name: Generate stable version
        id: stable-version
        run: |
          CURRENT_VERSION="${{ steps.current-version.outputs.current-version }}"
          BASE_VERSION=$(echo $CURRENT_VERSION | sed 's/-.*//')
          # For testing, create a stable version with timestamp
          STABLE_VERSION="${BASE_VERSION}.$(date +%Y%m%d%H%M%S)"
          echo "stable-version=$STABLE_VERSION" >> $GITHUB_OUTPUT
          echo "Stable version: $STABLE_VERSION"

      - name: Update package.json version
        run: |
          npm version ${{ steps.stable-version.outputs.stable-version }} --no-git-tag-version
          echo "Updated package.json to version ${{ steps.stable-version.outputs.stable-version }}"

      - name: Upload version files
        uses: actions/upload-artifact@v4
        with:
          name: version-files
          path: |
            package.json
            package-lock.json

  Build:
    runs-on: ${{ matrix.os }}
    needs: prepare-stable
    permissions: write-all
    env:
      GH_TOKEN: ${{ secrets.ACCESS_TOKEN }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-14]
        architecture: [x64, arm64]
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download version files
        uses: actions/download-artifact@v4
        with:
          name: version-files

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Dependencies
        run: npm ci

      - name: build-linux-x64
        if: matrix.architecture == 'x64' && matrix.os == 'ubuntu-latest'
        run: npm run build:linux-x64

      - name: build-linux-arm
        if: matrix.architecture == 'arm64' && matrix.os == 'ubuntu-latest'
        run: npm run build:linux-arm

      - name: build-win-x64
        if: matrix.architecture == 'x64' && matrix.os == 'windows-latest'
        run: npm run build:win-x64

      - name: build-win-arm
        if: matrix.architecture == 'arm64' && matrix.os == 'windows-latest'
        run: npm run build:win-arm

      - name: build-mac-universal
        if: matrix.architecture == 'arm64' && matrix.os == 'macos-14'
        run: yarn run build:mac

      - name: release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: 'v${{ needs.prepare-stable.outputs.version }}'
          name: 'Stable Release v${{ needs.prepare-stable.outputs.version }}'
          body: |
            ## ðŸš€ Stable Release v${{ needs.prepare-stable.outputs.version }}

            This is a stable release of Comic Universe 2.0.0.

            **Version:** ${{ needs.prepare-stable.outputs.version }}
            **Branch:** `${{ github.ref_name }}`
            **Commit:** `${{ github.sha }}`

            ## What's New in 2.0.0
            - Updated dependencies to latest versions
            - Improved CI/CD pipeline
            - Enhanced development workflow
            - Better error handling and logging
            - Standardized release nomenclature (alpha/beta)

            ## Installation
            Download the appropriate build for your platform from the assets below.

            ## Testing
            This is a stable release. Please test thoroughly and report any issues.
          files: |
            dist/*.exe
            dist/*.zip
            dist/*.dmg
            dist/*.AppImage
            dist/*.snap
            dist/*.deb
            dist/*.rpm
            dist/*.tar.gz
            dist/*.yml
            dist/*.blockmap
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
