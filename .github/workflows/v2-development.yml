name: 2.0.0 Development Release

on:
  push:
    branches:
      - 'dev/v2.0.0'
  pull_request:
    branches:
      - 'dev/v2.0.0'

jobs:
  prepare-release:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.dev-version.outputs.version }}
      release-type: ${{ steps.dev-version.outputs.release-type }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Get current version
        id: current-version
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "current-version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          echo "Current version: $CURRENT_VERSION"

      - name: Generate development version
        id: dev-version
        run: |
          CURRENT_VERSION="${{ steps.current-version.outputs.current-version }}"
          BASE_VERSION=$(echo $CURRENT_VERSION | sed 's/-.*//')

          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            # PR: Create beta version
            NEW_VERSION="${BASE_VERSION}-beta.$(date +%Y%m%d%H%M%S)"
            RELEASE_TYPE="beta"
          else
            # Push: Create alpha version
            NEW_VERSION="${BASE_VERSION}-alpha.$(date +%Y%m%d%H%M%S)"
            RELEASE_TYPE="alpha"
          fi

          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "release-type=$RELEASE_TYPE" >> $GITHUB_OUTPUT
          echo "New version: $NEW_VERSION"
          echo "Release type: $RELEASE_TYPE"

      - name: Update package.json version
        if: steps.dev-version.outputs.version != steps.current-version.outputs.current-version
        run: |
          npm version ${{ steps.dev-version.outputs.version }} --no-git-tag-version
          echo "Updated package.json to version ${{ steps.dev-version.outputs.version }}"

      - name: Upload version files
        uses: actions/upload-artifact@v4
        with:
          name: version-files
          path: |
            package.json
            package-lock.json

  build-linux:
    runs-on: ubuntu-latest
    needs: prepare-release
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download version files
        uses: actions/download-artifact@v4
        with:
          name: version-files

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Build application (Linux)
        run: npm run build:linux-x64

      - name: Upload Linux artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-builds
          path: dist/*.AppImage

  build-windows:
    runs-on: windows-latest
    needs: prepare-release
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download version files
        uses: actions/download-artifact@v4
        with:
          name: version-files

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Build application (Windows)
        run: npm run build:win

      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-builds
          path: dist/*.exe

  build-macos:
    runs-on: macos-latest
    needs: prepare-release
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download version files
        uses: actions/download-artifact@v4
        with:
          name: version-files

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Build application (macOS)
        run: npm run build:mac

      - name: Upload macOS artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-builds
          path: dist/*.dmg

  create-release:
    runs-on: ubuntu-latest
    needs: [prepare-release, build-linux, build-windows, build-macos]
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Create development release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: 'v${{ needs.prepare-release.outputs.version }}'
          name: '2.0.0 Development Release ${{ needs.prepare-release.outputs.version }}'
          body: |
            ## ðŸš€ 2.0.0 Development Release

            This is a development release for Comic Universe 2.0.0.

            **Release Type:** ${{ needs.prepare-release.outputs.release-type }}
            **Branch:** `${{ github.ref_name }}`
            **Commit:** `${{ github.sha }}`

            ## What's New in 2.0.0
            - Updated dependencies to latest versions
            - Improved CI/CD pipeline
            - Enhanced development workflow
            - Better error handling and logging

            ## Testing
            This is a development release. Please test thoroughly and report any issues.

            ## Installation
            Download the appropriate build for your platform from the assets below.
          files: |
            linux-builds/*
            windows-builds/*
            macos-builds/*
          draft: false
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `ðŸš€ **2.0.0 Development Release Created**
              
              Version: \`${{ needs.prepare-release.outputs.version }}\`
              Release Type: **${{ needs.prepare-release.outputs.release-type }}**
              
              A development release has been created for testing Comic Universe 2.0.0. 
              Download it from the [releases page](https://github.com/${{ github.repository }}/releases/tag/v${{ needs.prepare-release.outputs.version }}).
              
              Please test the new features and provide feedback!`
            })
