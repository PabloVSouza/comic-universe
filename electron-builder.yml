appId: com.pablovsouza.comic-universe
productName: Comic Universe
directories:
  buildResources: build
# Publish configuration disabled - we handle publishing manually in workflows
# publish:
#   provider: github
#   owner: PabloVSouza
#   repo: comic-universe

# Disable auto-publishing in CI
publish: null

# Disable code signing globally
forceCodeSigning: false

# Disable problematic dependency collection
disableDefaultIgnoredFiles: true

# Use afterAllArtifactBuild hook to embed icon after executable is renamed
afterAllArtifactBuild: scripts/after-pack.js

# Code signing configuration
# For code signing options:
# 1. Apple Developer Program ($99/year) - macOS official certificates
# 2. Microsoft Partner Center (Windows) - Free for open source projects
# 3. Self-signed certificates (free but shows security warnings)
# 4. No code signing (free but shows "unidentified developer" warnings)

files:
  - '**/*'
  - '!**/.vscode/*'
  - '!src/*'
  - '!electron.vite.config.{js,ts,mjs,cjs}'
  - '!{.eslintignore,.eslintrc.cjs,.prettierignore,.prettierrc.yaml,dev-app-update.yml,CHANGELOG.md,README.md}'
  - '!{.env,.env.*,.npmrc,pnpm-lock.yaml}'
  - '!{tsconfig.json,tsconfig.node.json,tsconfig.web.json}'
  - '!*.code-workspace'
  - '!node_modules/prisma/**'
  - '!node_modules/@prisma/**'
  - '!node_modules/.prisma/**'
  - '!node_modules/drizzle-kit/**'
  - '!node_modules/@types/**'
  - '!node_modules/typescript/**'
  - '!node_modules/eslint/**'
  - '!node_modules/prettier/**'
  - '!node_modules/vite/**'
  - '!node_modules/electron-vite/**'
  - '!node_modules/electron-builder/**'
  - '!node_modules/sass-embedded/**'
  - '!node_modules/tailwindcss/**'
  - '!node_modules/autoprefixer/**'
  - '!node_modules/postcss/**'
  - '!node_modules/@emnapi/**'
  - '!node_modules/@tailwindcss/**'
  - '!node_modules/vite-plugin-svgr/**'
  - '!node_modules/@vitejs/**'
  - '!node_modules/@typescript-eslint/**'
  - '!node_modules/eslint-plugin-**'
  - '!node_modules/globals/**'
  - '!node_modules/@rollup/**'
  - '!node_modules/rollup/**'
  - '!node_modules/@jridgewell/**'
  - '!node_modules/@electron/notarize/**'
  - '!node_modules/@electron-toolkit/tsconfig/**'
  - '!node_modules/@types/better-sqlite3/**'
  - '!node_modules/@types/cors/**'
  - '!node_modules/@types/express/**'
  - '!node_modules/@types/lodash.debounce/**'
  - '!node_modules/@types/node/**'
  - '!node_modules/@types/pacote/**'
  - '!node_modules/@types/react/**'
  - '!node_modules/@types/react-dom/**'
  - '!node_modules/@types/uuid/**'
  - '!node_modules/@emnapi/**'
  - '!node_modules/@tailwindcss/oxide-wasm32-wasi/**'
  - '!node_modules/better-sqlite3/build/Release/test_extension.node'
  - '!node_modules/**/test/**'
  - '!node_modules/**/tests/**'
  - '!node_modules/**/docs/**'
  - '!node_modules/**/examples/**'
  - '!node_modules/**/demo/**'
  - '!node_modules/**/sample/**'
  - '!node_modules/**/*.md'
  - '!node_modules/**/*.txt'
  - '!node_modules/**/*.map'
  - '!node_modules/**/CHANGELOG*'
  - '!node_modules/**/LICENSE*'
  - '!node_modules/**/README*'
asarUnpack:
  - 'node_modules/better-sqlite3/build/Release/better_sqlite3.node'
  - 'resources/*'
  - 'out/database/migrations/**/*'
  - 'build/icon-256.png'
win:
  executableName: comic-universe
  icon: build/icons/icon.ico
  # Force icon embedding with multiple approaches
  extraResources:
    - from: build/icon-256.png
      to: icon.png
    - from: build/icon-256.png
      to: icon-256.png
  # Also try copying to root
  extraFiles:
    - from: build/icon-256.png
      to: icon.png
    - from: build/icons/icon.ico
      to: icon.ico
  # Additional Windows icon settings
  requestedExecutionLevel: asInvoker
  # Disable executable editing since we have code signing disabled
  signAndEditExecutable: false
  # Force Windows to only build x64 (disable ARM builds)
  target:
    - target: nsis
      arch:
        - x64
  # Code signing disabled for Windows
  # Disable code signing completely
  forceCodeSigning: false
  # Explicitly disable all signing
  cscLink: null
  cscKeyPassword: null
  # Disable timestamping
  signExts: []
nsis:
  artifactName: ${name}-${version}-win-${arch}.${ext}
  shortcutName: ${productName}
  uninstallDisplayName: ${productName}
  createDesktopShortcut: always
  # Disable NSIS code signing
  oneClick: false
  perMachine: false
mac:
  artifactName: ${name}-${version}-mac-${arch}.${ext}
  icon: build/icon.icns
  entitlementsInherit: build/entitlements.mac.plist
  extendInfo:
    - NSCameraUsageDescription: Application requests access to the device's camera.
    - NSMicrophoneUsageDescription: Application requests access to the device's microphone.
    - NSDocumentsFolderUsageDescription: Application requests access to the user's Documents folder.
    - NSDownloadsFolderUsageDescription: Application requests access to the user's Downloads folder.

  # Code signing disabled for macOS
  identity: null
  # Disable code signing completely
  forceCodeSigning: false

  # Notarization disabled (requires Apple Developer Program)
  notarize: false

  # Hardened runtime disabled (required for notarization)
  hardenedRuntime: false

  # Gatekeeper assessment disabled (required for notarization)
  gatekeeperAssess: false
dmg:
  artifactName: ${name}-${version}-mac-${arch}.${ext}
  backgroundColor: '#a0aef8'
  # Optimize DMG creation speed
  format: UDZO
  window:
    width: 540
    height: 380
linux:
  target:
    - AppImage
    - deb
  icon: resources/icon.png
  maintainer: electronjs.org
  category: Utility
appImage:
  artifactName: ${name}-${version}-linux-${arch}.${ext}
npmRebuild: false
# Optimize build size and speed
compression: normal
removePackageScripts: true
removePackageKeywords: true
generateUpdatesFilesForAllChannels: true
buildDependenciesFromSource: false
# Skip problematic dependencies
nodeGypRebuild: false
